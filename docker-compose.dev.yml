# Development Override für docker-compose
# Verwendung: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  scam-detector-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development  # Wenn multi-stage build verwendet wird
    volumes:
      # Hot-reload für Entwicklung
      - ./backend/app:/app/app
      - ./backend/requirements.txt:/app/requirements.txt
    environment:
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - RELOAD=true
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"  # Direkter Zugriff für API-Tests

  nginx:
    volumes:
      # Live-reload für Frontend-Änderungen
      - ./frontend:/usr/share/nginx/html
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3000:80"  # Anderer Port für Development

  # Development Tools
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@scamdetector.dev
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    profiles:
      - dev-tools

  # Mail Testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    profiles:
      - dev-tools

  # Redis Commander für Redis-Verwaltung
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - dev-tools

# Development-spezifische Volumes
volumes:
  node_modules:  # Für Frontend-Dependencies falls Node.js verwendet wird
